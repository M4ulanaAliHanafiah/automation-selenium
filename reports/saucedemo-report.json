{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-04-18T10:10:44.182Z",
    "end": "2025-04-18T10:10:56.509Z",
    "duration": 12327,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "84659986-f2a3-4192-9915-661762f8e77b",
      "title": "",
      "fullFile": "/Users/Shared/test/selenium/tests/login.test.js",
      "file": "/tests/login.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bc6b16be-e645-44b2-ad40-d3d1d56af31c",
          "title": "SauceDemo Login Test with Screenshot on Failure",
          "fullFile": "/Users/Shared/test/selenium/tests/login.test.js",
          "file": "/tests/login.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"SauceDemo Login Test with Screenshot on Failure\"",
              "fullTitle": "SauceDemo Login Test with Screenshot on Failure \"before all\" hook in \"SauceDemo Login Test with Screenshot on Failure\"",
              "timedOut": false,
              "duration": 1357,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder()\n  .forBrowser('chrome')\n  .setChromeOptions(new chrome.Options())\n  .build();\nloginPage = new LoginPage(driver);",
              "err": {},
              "uuid": "8d7c2a13-c09d-43a9-ad43-3023bb4be247",
              "parentUUID": "bc6b16be-e645-44b2-ad40-d3d1d56af31c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"SauceDemo Login Test with Screenshot on Failure\"",
              "fullTitle": "SauceDemo Login Test with Screenshot on Failure \"after all\" hook in \"SauceDemo Login Test with Screenshot on Failure\"",
              "timedOut": false,
              "duration": 56,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "4ade65fb-6d29-4c3f-8f76-c6e21666e53d",
              "parentUUID": "bc6b16be-e645-44b2-ad40-d3d1d56af31c",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"SauceDemo Login Test with Screenshot on Failure\"",
              "fullTitle": "SauceDemo Login Test with Screenshot on Failure \"after each\" hook in \"SauceDemo Login Test with Screenshot on Failure\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.currentTest.state === 'failed') {\n  const screenshot = await driver.takeScreenshot();\n  const filePath = path.resolve(`./screenshots/${this.currentTest.title.replace(/\\s+/g, '_')}.png`);\n  fs.writeFileSync(filePath, screenshot, 'base64');\n  console.log(`ðŸ“¸ Screenshot saved at: ${filePath}`);\n}",
              "err": {},
              "uuid": "2aee8e2f-f5fe-47a9-9c66-d4d618b9d33f",
              "parentUUID": "bc6b16be-e645-44b2-ad40-d3d1d56af31c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should login and see the first product card",
              "fullTitle": "SauceDemo Login Test with Screenshot on Failure should login and see the first product card",
              "timedOut": false,
              "duration": 10910,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.open();\nawait loginPage.login('standard_user', 'secret_sauce');\nconst onInventoryPage = await loginPage.isInventoryPage();\nassert.strictEqual(onInventoryPage, true, 'Should be on inventory page after login');\nconst productName = await loginPage.getFirstProductName();\nassert.ok(productName.length > 0, 'First product name should not be empty');\nconsole.log('âœ” First product name:', productName);",
              "err": {},
              "uuid": "ebe2dbd9-9356-43db-80ed-11a760a6401a",
              "parentUUID": "bc6b16be-e645-44b2-ad40-d3d1d56af31c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ebe2dbd9-9356-43db-80ed-11a760a6401a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10910,
          "root": false,
          "rootEmpty": false,
          "_timeout": 70000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "saucedemo-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "saucedemo-report"
      },
      "version": "6.2.0"
    }
  }
}